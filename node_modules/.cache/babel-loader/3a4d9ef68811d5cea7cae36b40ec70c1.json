{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Bruno e Vanessa\\\\Desktop\\\\Archive\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  _s();\n\n  const [estados, setEstados] = useState([]);\n  const [cidades, setCidades] = useState([]);\n  const [state, setState] = useState({\n    estado: ''\n  });\n\n  const loadRegioes = UF => {\n    fetch(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${UF}/municipios`).then(response => response.json()).then(listaCidades => {\n      setCidades(listaCidades.map(d => ({\n        id: d.id,\n        nome: d.nome\n      })));\n    });\n  };\n\n  useEffect(() => {\n    fetch('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => response.json()).then(listaEstados => {\n      setEstados(listaEstados.map(d => ({\n        id: d.sigla,\n        nome: d.nome\n      })));\n    }); // TODO Especifique como limpar depois desse efeito:\n\n    return () => {};\n  }, [state.estado]);\n  const listaEstadoRender = estados.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: d.id,\n    children: d.nome\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 53\n  }, this));\n  const cidadesRender = cidades.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: d.id,\n    children: d.nome\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 49\n  }, this));\n\n  function onChangeEstado(event) {\n    console.log(event.target.value);\n    setState({ ...state,\n      estado: event.target.value\n    });\n    loadRegioes(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Estado\",\n        children: \"Escolha o Estado:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"Estado\",\n        value: state.estado,\n        onChange: onChangeEstado,\n        children: listaEstadoRender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Municipio\",\n        children: \"Escolha o Municipio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"Municipio\",\n        children: cidadesRender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QtOreJNhRo7xyVqRwDP7EwPMVV0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Bruno e Vanessa/Desktop/Archive/src/App.tsx"],"names":["React","useState","useEffect","App","estados","setEstados","cidades","setCidades","state","setState","estado","loadRegioes","UF","fetch","then","response","json","listaCidades","map","d","id","nome","listaEstados","sigla","listaEstadoRender","cidadesRender","onChangeEstado","event","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  \n  const [estados, setEstados] = useState([]);\n  const [cidades, setCidades] = useState([]);\n\n  const [state, setState] = useState({\n    estado : ''\n  });\n\n  const loadRegioes = (UF: string) => {\n    fetch(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${UF}/municipios`)\n      .then(response => response.json())\n      .then(listaCidades => {\n        setCidades(listaCidades.map((d: any) => ({id: d.id, nome: d.nome})));\n      })\n  }\n  \n\n  useEffect(() => {\n    fetch('https://servicodados.ibge.gov.br/api/v1/localidades/estados')\n      .then(response => response.json())\n      .then(listaEstados => {\n        setEstados(listaEstados.map((d: any) => ({id: d.sigla, nome: d.nome})));\n      })\n\n    // TODO Especifique como limpar depois desse efeito:\n    return () => {};\n  },[state.estado]);\n\n  \n  const listaEstadoRender = estados.map((d: any) => <option value={d.id}>{d.nome}</option>)\n\n  const cidadesRender = cidades.map((d: any) => <option value={d.id}>{d.nome}</option>)\n\n\n  function onChangeEstado(event: any) {\n    console.log(event.target.value);\n    setState({...state, estado: event.target.value});\n    loadRegioes(event.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <label htmlFor=\"Estado\">Escolha o Estado:</label>\n        <select id=\"Estado\" value={state.estado} onChange={onChangeEstado} >\n          {listaEstadoRender}\n        </select>\n\n        <label htmlFor=\"Municipio\">Escolha o Municipio:</label>\n        <select id=\"Municipio\">\n          {cidadesRender}\n        </select>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}